GRAFANA_ADMIN_PASSWD ?= ""
HARBOR_ADMIN_PASSWD ?= ""
LETSENCRYPT_EMAIL ?= letsencrypt@example.com
DNS_DOMAIN ?= example.com
METALLB_RANGE_START ?= 192.168.122.200
METALLB_RANGE_END ?= 192.168.122.209
OAUTH_CLIENT_ID ?= abc
OAUTH_CLIENT_SECRET ?= abc
OAUTH_ALLOWED_ORGS ?= abc

.PHONY: all
all: infra-init tiller-deploy nfs-server-storage-provisioner base-apps-deploy metrics-server-deploy prometheus-adapter-deploy contour-deploy

# All, except Tiller. For use with Helm3
.PHONY: all-h3
all-h3: infra-init nfs-server-storage-provisioner base-apps-deploy metrics-server-deploy prometheus-adapter-deploy contour-deploy

.PHONY: all-istio
all-istio: infra-init tiller-deploy nfs-server-storage-provisioner base-apps-deploy metrics-server-deploy prometheus-adapter-deploy istio-deploy infra-init-post

.PHONY: infra-init
infra-init: grafana-init metallb-init

Get Kubernetes health dashboard from https://github.com/MichaelVL/kubernetes-grafana-dashboard
dashboard-kubernetes-health.json:
	curl -sO https://raw.githubusercontent.com/MichaelVL/kubernetes-grafana-dashboard/master/dashboards/dashboard-kubernetes-health.json

.PHONY: grafana-init
grafana-init: dashboard-kubernetes-health.json
	-kubectl create ns metrics
	-kubectl -nmetrics delete configmap dashboard
	kubectl -nmetrics create configmap dashboard --from-file dashboard-kubernetes-health.json
	kubectl -nmetrics label configmap dashboard grafana_dashboard=1

# MetalLB config can be deployed after MetalLB
.PHONY: metallb-init
metallb-init:
	-kubectl create ns metallb
	cat deploy/metallb-layer2.yaml | METALLB_RANGE_START=$(METALLB_RANGE_START) METALLB_RANGE_END=$(METALLB_RANGE_END) envsubst | kubectl -nmetallb apply -f -

.PHONY: tiller-deploy
tiller-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/tiller.yaml

.PHONY: base-apps-deploy
base-apps-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/metallb.yaml
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/cert-manager.yaml
	-helmsman --no-banner --keep-untracked-releases --apply -f deploy/prometheus.yaml
	OAUTH_CLIENT_ID=$(OAUTH_CLIENT_ID) OAUTH_CLIENT_SECRET=$(OAUTH_CLIENT_SECRET) OAUTH_ALLOWED_ORGS=$(OAUTH_ALLOWED_ORGS) GRAFANA_ADMIN_PASSWD=$(GRAFANA_ADMIN_PASSWD) DNS_DOMAIN=$(DNS_DOMAIN) helmsman --no-banner --keep-untracked-releases --apply -f deploy/grafana.yaml
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/loki.yaml

.PHONY: metrics-server-deploy
metrics-server-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/metrics-server.yaml

.PHONY: contour-deploy
contour-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/contour.yaml

.PHONY: traefik-deploy
traefik-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/traefik.yaml

.PHONY: istio-deploy
istio-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/istio.yaml

.PHONY: prometheus-adapter-deploy
prometheus-adapter-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/prometheus-adapter.yaml

# This depends on Istio CRDs deployed above
.PHONY: infra-init-post
infra-init-post:
	kubectl -nmetrics apply -f deploy/grafana-istio-ingress.yaml

.PHONY: letsencrypt-issuers
letsencrypt-issuers:
	cat deploy/tls-cluster-cert-issuers.yaml | LETSENCRYPT_EMAIL=$(LETSENCRYPT_EMAIL) envsubst | kubectl apply -f -

.PHONY: flux-deploy
flux-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/cncf-flux.yaml

.PHONY: nfs-server-storage-provisioner
nfs-server-storage-provisioner:
	NFS_STORAGE_PROVISIONER_HOSTNAME=$(shell kubectl get --no-headers=true no | head -n 1 | cut -f 1 -d' ') helmsman --no-banner --keep-untracked-releases --apply -f deploy/nfs-storage-provisioner.yaml
	kubectl -n nfs-storage apply -f deploy/nfs-storage-provisioner-pv.yaml

.PHONY: nfs-client-storage-provisioner
nfs-client-storage-provisioner:
	EXTERNAL_NFS_SERVER=$(EXTERNAL_NFS_SERVER) EXTERNAL_NFS_SERVER_PATH=$(EXTERNAL_NFS_SERVER_PATH) helmsman --no-banner --keep-untracked-releases --apply -f deploy/nfs-client-storage-provisioner.yaml

.PHONY: harbor-deploy
harbor-deploy:
	HARBOR_ADMIN_PASSWD=$(HARBOR_ADMIN_PASSWD) helmsman --no-banner --keep-untracked-releases --apply -f deploy/harbor.yaml

.PHONY: dashboard-deploy
dashboard-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/dashboard.yaml

.PHONY: jenkins-deploy
jenkins-deploy:
	helmsman --no-banner --keep-untracked-releases --apply -f deploy/jenkins.yaml
	-kubectl -njenkins create configmap dashboard --from-file jenkins-performance-and-health-overview_rev1.json
	-kubectl -njenkins label configmap dashboard grafana_dashboard=1
